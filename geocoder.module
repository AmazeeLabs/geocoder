<?php

/**
 * @file
 * Module file for geocoder module.
 */

/**
 * The Geocoder API call.
 *
 * Given a plugin id and data, geocode the data into an array using the handler.
 *
 * @param string $plugin_id
 *   The geocoder plugin id to use.
 * @param string $data
 *   Data to be passed into the handler for geocoding. For example a address string.
 * @param array $options
 *   Additional options to pass to the handler. Exact key / values to pass depend on the handler.
 *
 * @return array
 *
 * @example:
 *    geocoder('GoogleMaps', '1600 Amphitheatre Parkway Mountain View, CA 94043');
 */
function geocoder($plugin_id, $data, $options = array()) {
  \Drupal\geocoder\Geocoder::setPlugin($plugin_id, $options);

  if ($value = \Drupal\geocoder\Geocoder::geocode($plugin_id, $data)) {
    return $value->first()->toArray();
  }

  return FALSE;
}

/**
 * The Reverse geocoder API call.
 *
 * Given a plugin id, a latitude and a longitude, reverse geocode the data into an array using the handler.
 *
 * @param string $plugin_id
 *   The geocoder plugin id to use.
 * @param string $latitude
 *   The latitude.
 * @param string $longitude
 *   The longitude.
 * @param array $options
 *   Additional options to pass to the handler. Exact key / values to pass depend on the handler.
 *
 * @return array
 *
 * @example:
 *    reverse('GoogleMaps', '37.4224504', '-122.0840859');
 */
function reverse($plugin_id, $latitude, $longitude, $options = array()) {
  \Drupal\geocoder\Geocoder::setPlugin($plugin_id, $options);

  if ($value = \Drupal\geocoder\Geocoder::reverse($plugin_id, $latitude, $longitude)) {
    return $value->first()->toArray();
  }

  return FALSE;
}
