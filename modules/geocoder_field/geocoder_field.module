<?php

/**
 * Implements hook_entity_presave().
 */
function geocoder_field_entity_presave(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity instanceof \Drupal\Core\Entity\ContentEntityInterface) {
    $id = $entity->getEntityTypeId() . '.' . $entity->bundle() . '.default';
    if ($entityFormDisplay = \Drupal\Core\Entity\Entity\EntityFormDisplay::load($id)) {
      foreach ($entityFormDisplay->getComponents() as $field_id => $component) {
        if ($component['type'] == 'geocoder_geocode_widget') {
          $settings = $component['settings'];

          // Find the enabled geocoder plugins.
          $provider_plugins = array_filter($settings['provider_plugins'], function($v, $k) {
            return (bool) $v['checked'];
          }, ARRAY_FILTER_USE_BOTH);
          $provider_plugins = array_keys($provider_plugins);

          $mode = $settings['mode'];
          $field_a = $field_b = NULL;

          if ($mode == 'from') {
            $field_a = $entity->get($settings['field']);
            $field_b = $entity->get($field_id);
          }
          if ($mode == 'to') {
            $field_a = $entity->get($field_id);
            $field_b = $entity->get($settings['field']);
          }

          if ($field_a && $field_b) {
            foreach($field_a->getValue() as $value) {
              if ($value['target_id']) {
                $value['value'] = \Drupal::service('file_system')->realpath(\Drupal\file\Entity\File::load($value['target_id'])->getFileUri());
              }

              if ($addressCollection = \Drupal\geocoder\Geocoder::geocode($provider_plugins, $value['value'])) {
                $dumper = \Drupal\geocoder\Geocoder::getPlugin('dumper', $settings['dumper_plugin']);
                $entity->set($field_b->getName(), $dumper->dump($addressCollection->first()));
              }
            }
          }
        }
      }
    }
  }
}